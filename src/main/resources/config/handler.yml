

# Handler middleware chain configuration
#----------------------------------------
enabled: true

# Configuration for the LightHttpHandler. The handler is the base class  for all middleware, server and health handlers
# set the Status Object in the AUDIT_INFO, for auditing purposes
# default, if not set:false
auditOnError: ${handler.auditOnError:false}

# set the StackTrace in the AUDIT_INFO, for auditing purposes
# default, if not set:false
auditStackTrace: ${handler.auditStackTrace:false}

#------------------------------------------------------------------------------
# Support individual handler chains for each separate endpoint. It allows framework
# handlers like health check, server info to bypass majority of the middleware handlers
# and allows mixing multiple frameworks like OpenAPI and GraphQL in the same instance.
#
# handlers  --  list of handlers to be used across chains in this microservice
#               including the routing handlers for ALL endpoints
#           --  format: fully qualified handler class name@optional:given name
# chains    --  allows forming of [1..N] chains, which could be wholly or
#               used to form handler chains for each endpoint
#               ex.: default chain below, reused partially across multiple endpoints
# paths     --  list all the paths to be used for routing within the microservice
#           ----  path: the URI for the endpoint (ex.: path: '/v1/pets')
#           ----  method: the operation in use (ex.: 'post')
#           ----  exec: handlers to be executed -- this element forms the list and
#                       the order of execution for the handlers
#
# IMPORTANT NOTES:
# - to avoid executing a handler, it has to be removed/commented out in the chain
#   or change the enabled:boolean to false for a middleware handler configuration.
# - all handlers, routing handler included, are to be listed in the execution chain
# - for consistency, give a name to each handler; it is easier to refer to a name
#   vs a fully qualified class name and is more elegant
# - you can list in chains the fully qualified handler class names, and avoid using the
#   handlers element altogether
#------------------------------------------------------------------------------
handlers:
  # Light-framework cross-cutting concerns implemented in the microservice
  - com.networknt.exception.ExceptionHandler@exception
  - com.networknt.metrics.MetricsHandler@metrics
  - com.networknt.traceability.TraceabilityHandler@traceability
  - com.networknt.correlation.CorrelationHandler@correlation
  - com.networknt.openapi.OpenApiHandler@specification
  - com.networknt.openapi.JwtVerifyHandler@security
  - com.networknt.body.BodyHandler@body
  - com.networknt.audit.AuditHandler@audit
  # DumpHandler is to dump detail request/response info to log, useful for troubleshooting but not suggested to use in production due to it may lower the performance
  # - com.networknt.dump.DumpHandler@dump
  - com.networknt.sanitizer.SanitizerHandler@sanitizer
  - com.networknt.openapi.ValidatorHandler@validator
  # Customer business domain specific cross-cutting concerns handlers
  # - com.example.validator.CustomizedValidator@custvalidator
  # Framework endpoint handlers
  - com.networknt.health.HealthGetHandler@health
  - com.networknt.info.ServerInfoGetHandler@info
  - com.networknt.specification.SpecDisplayHandler@spec
  - com.networknt.specification.SpecSwaggerUIHandler@swaggerui
  # - com.networknt.metrics.prometheus.PrometheusGetHandler@getprometheus
  # Business Handlers
  - com.ekshunya.sahaaybackend.handler.TicketGetHandler
  - com.ekshunya.sahaaybackend.handler.TicketPostHandler
  - com.ekshunya.sahaaybackend.handler.TicketTicketIdGetHandler
  - com.ekshunya.sahaaybackend.handler.TicketTicketIdPutHandler
  - com.ekshunya.sahaaybackend.handler.TicketUpdatePostHandler
  - com.ekshunya.sahaaybackend.handler.TicketTicketIdDeleteHandler
  - com.ekshunya.sahaaybackend.handler.TicketTicketIdCommentPostHandler
  - com.ekshunya.sahaaybackend.handler.TicketTicketIdCommentIdPutHandler
  - com.ekshunya.sahaaybackend.handler.TicketTicketIdCommentIdDeleteHandler
  - com.ekshunya.sahaaybackend.handler.TicketUserUserIdGetHandler
  - com.ekshunya.sahaaybackend.handler.TicketAssignedToUserIdGetHandler
  - com.ekshunya.sahaaybackend.handler.UserPhoneAddPostHandler
  - com.ekshunya.sahaaybackend.handler.UserPhoneVerifyPostHandler

#TODO : I screwed up. The Rename fot the Ticket Feed Handler has not yet been done in the main handler.yml.
chains:
  default:
    - exception
    - metrics
    - traceability
    - correlation
    - specification
    - security
    - body
    - audit
#    - dump  TODO : This should always be commented out especially for one type of request that is problem creation.
    - sanitizer
    - validator

paths:
  - path: '/ticket'
    method: 'GET'
    exec:
      - default
      - com.ekshunya.sahaaybackend.handler.TicketGetHandler
  - path: '/ticket'
    method: 'POST'
    exec:
      - default
      - com.ekshunya.sahaaybackend.handler.TicketPostHandler
  - path: '/ticket/{ticketId}'
    method: 'GET'
    exec:
      - default
      - com.ekshunya.sahaaybackend.handler.TicketTicketIdGetHandler
  - path: '/ticket/{ticketId}'
    method: 'PUT'
    exec:
      - default
      - com.ekshunya.sahaaybackend.handler.TicketTicketIdPutHandler
  - path: '/ticket/{ticketId}'
    method: 'POST'
    exec:
      - default
      - com.ekshunya.sahaaybackend.handler.TicketUpdatePostHandler
  - path: '/ticket/{ticketId}'
    method: 'DELETE'
    exec:
      - default
      - com.ekshunya.sahaaybackend.handler.TicketTicketIdDeleteHandler
  - path: '/ticket/{ticketId}/comment'
    method: 'POST'
    exec:
      - default
      - com.ekshunya.sahaaybackend.handler.TicketTicketIdCommentPostHandler
  - path: '/ticket/{ticketId}/{commentId}'
    method: 'PUT'
    exec:
      - default
      - com.ekshunya.sahaaybackend.handler.TicketTicketIdCommentIdPutHandler
  - path: '/ticket/{ticketId}/{commentId}'
    method: 'DELETE'
    exec:
      - default
      - com.ekshunya.sahaaybackend.handler.TicketTicketIdCommentIdDeleteHandler
  - path: '/ticket/user/{userId}'
    method: 'GET'
    exec:
      - default
      - com.ekshunya.sahaaybackend.handler.TicketUserUserIdGetHandler
  - path: '/ticket/assignedTo/{userId}'
    method: 'GET'
    exec:
      - default
      - com.ekshunya.sahaaybackend.handler.TicketAssignedToUserIdGetHandler
  - path: '/user/phone/add'
    method: 'POST'
    exec:
      - default
      - com.ekshunya.sahaaybackend.handler.UserPhoneAddPostHandler
  - path: '/user/phone/verify'
    method: 'POST'
    exec:
      - default
      - com.ekshunya.sahaaybackend.handler.UserPhoneVerifyPostHandler

  - path: '/health/${server.serviceId:com.ekshunya.sahaay-backend-3.0.1}'
    method: 'get'
    exec:
      - health

  - path: '/server/info'
    method: 'get'
    exec:
      - info


  - path: '/spec.yaml'
    method: 'get'
    exec:
      - spec
  - path: '/specui.html'
    method: 'get'
    exec:
      - swaggerui